{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf;KAnBS","debugId":null}},
    {"offset": {"line": 89, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC;IACzE,qBACE,6LAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,mcACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdS","debugId":null}},
    {"offset": {"line": 121, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf;MARS","debugId":null}},
    {"offset": {"line": 236, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/socket.ts"],"sourcesContent":["import { io, Socket } from 'socket.io-client'\n\ninterface Message {\n  id: string\n  text: string\n  sender: string\n  receiver: string\n  originalLanguage: string\n  translatedText?: string\n  timestamp: string\n  type: 'text' | 'audio' | 'file'\n  fileName?: string\n}\n\ninterface CallSignal {\n  type: 'voice' | 'video'\n  from: string\n  to: string\n  signal?: any\n}\n\nclass ChatSocket {\n  private _socket: Socket | null = null\n  private userId: string | null = null\n  private userLanguage: string | null = null\n\n  // Getter for socket instance\n  get socket(): Socket | null {\n    return this._socket\n  }\n\n  // Event callbacks\n  private messageHandlers: ((message: Message) => void)[] = []\n  private callHandlers: ((signal: CallSignal) => void)[] = []\n  private translateHandlers: ((translation: { original: string, translated: string }) => void)[] = []\n\n  constructor() {\n    // Initialize socket connection when the class is instantiated\n    this.initialize()\n  }\n\n  private initialize() {\n    // In production, this would be your WebSocket server URL\n    this._socket = io('http://localhost:3001', {\n      autoConnect: false,\n      reconnection: true,\n      reconnectionAttempts: 5,\n      reconnectionDelay: 1000,\n    })\n\n    this.setupListeners()\n  }\n\n  private setupListeners() {\n    if (!this._socket) return\n\n    // Handle incoming messages\n    this._socket.on('message', (message: Message) => {\n      // If the message is in a different language, request translation\n      if (message.originalLanguage !== this.userLanguage) {\n        this.requestTranslation(message.text, message.originalLanguage, this.userLanguage!)\n      }\n      \n      this.messageHandlers.forEach(handler => handler(message))\n    })\n\n    // Handle call signals\n    this._socket.on('call', (signal: CallSignal) => {\n      this.callHandlers.forEach(handler => handler(signal))\n    })\n\n    // Handle translations\n    this._socket.on('translation', (translation: { original: string; translated: string }) => {\n      this.translateHandlers.forEach(handler => handler(translation))\n    })\n\n    // Handle reconnection\n    this._socket.on('reconnect', () => {\n      if (this.userId) {\n        this.authenticate(this.userId, this.userLanguage!)\n      }\n    })\n  }\n\n  // Connect and authenticate user\n  public connect(userId: string, language: string) {\n    this.userId = userId\n    this.userLanguage = language\n\n    if (this._socket) {\n      this._socket.connect()\n      this.authenticate(userId, language)\n    }\n  }\n\n  private authenticate(userId: string, language: string) {\n    this._socket?.emit('authenticate', { userId, language })\n  }\n\n  // Disconnect user\n  public disconnect() {\n    this._socket?.disconnect()\n    this.userId = null\n    this.userLanguage = null\n  }\n\n  // Send a message\n  public sendMessage(message: Omit<Message, 'id' | 'timestamp'>) {\n    this._socket?.emit('message', {\n      ...message,\n      id: Date.now().toString(),\n      timestamp: new Date().toISOString(),\n    })\n  }\n\n  // Initiate a call\n  public initiateCall(type: 'voice' | 'video', to: string) {\n    this._socket?.emit('call', {\n      type,\n      from: this.userId,\n      to,\n    })\n  }\n\n  // Request translation\n  public requestTranslation(text: string, fromLanguage: string, toLanguage: string) {\n    this._socket?.emit('translate', {\n      text,\n      fromLanguage,\n      toLanguage,\n    })\n  }\n\n  // Event listeners\n  public onMessage(handler: (message: Message) => void) {\n    this.messageHandlers.push(handler)\n    return () => {\n      this.messageHandlers = this.messageHandlers.filter(h => h !== handler)\n    }\n  }\n\n  public onCall(handler: (signal: CallSignal) => void) {\n    this.callHandlers.push(handler)\n    return () => {\n      this.callHandlers = this.callHandlers.filter(h => h !== handler)\n    }\n  }\n\n  public onTranslation(handler: (translation: { original: string, translated: string }) => void) {\n    this.translateHandlers.push(handler)\n    return () => {\n      this.translateHandlers = this.translateHandlers.filter(h => h !== handler)\n    }\n  }\n}\n\n// Create a singleton instance\nconst chatSocket = new ChatSocket()\n\nexport default chatSocket\n\n// Example usage:\n/*\n// In your component:\nimport chatSocket from '@/lib/socket'\n\nuseEffect(() => {\n  // Connect when component mounts\n  chatSocket.connect('user123', 'en')\n\n  // Set up message handler\n  const unsubscribe = chatSocket.onMessage((message) => {\n    console.log('New message:', message)\n  })\n\n  // Set up call handler\n  const unsubscribeCall = chatSocket.onCall((signal) => {\n    console.log('Incoming call:', signal)\n  })\n\n  // Clean up when component unmounts\n  return () => {\n    unsubscribe()\n    unsubscribeCall()\n    chatSocket.disconnect()\n  }\n}, [])\n\n// Send a message\nchatSocket.sendMessage({\n  text: 'Hello!',\n  sender: 'user123',\n  receiver: 'user456',\n  originalLanguage: 'en',\n  type: 'text'\n})\n\n// Start a call\nchatSocket.initiateCall('video', 'user456')\n*/\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 408, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/hooks/use-call.ts"],"sourcesContent":["import { useState, useEffect, useCallback, useRef } from 'react'\nimport chatSocket from '@/lib/socket'\n\ninterface CallState {\n  isInCall: boolean\n  isCaller: boolean\n  callType: 'voice' | 'video' | null\n  remoteUserId: string | null\n  localStream: MediaStream | null\n  remoteStream: MediaStream | null\n}\n\nconst initialCallState: CallState = {\n  isInCall: false,\n  isCaller: false,\n  callType: null,\n  remoteUserId: null,\n  localStream: null,\n  remoteStream: null,\n}\n\nexport function useCall(userId: string) {\n  const [callState, setCallState] = useState<CallState>(initialCallState)\n  const peerConnection = useRef<RTCPeerConnection | null>(null)\n\n  // Initialize WebRTC peer connection\n  const initializePeerConnection = useCallback(() => {\n    const pc = new RTCPeerConnection({\n      iceServers: [\n        { urls: 'stun:stun.l.google.com:19302' },\n        // Add TURN servers in production\n      ],\n    })\n\n    // Handle ICE candidates\n    pc.onicecandidate = (event) => {\n      if (event.candidate && callState.remoteUserId) {\n        chatSocket.socket?.emit('call', {\n          type: 'ice-candidate',\n          candidate: event.candidate,\n          to: callState.remoteUserId,\n        })\n      }\n    }\n\n    // Handle incoming tracks\n    pc.ontrack = (event) => {\n      setCallState(prev => ({\n        ...prev,\n        remoteStream: event.streams[0],\n      }))\n    }\n\n    peerConnection.current = pc\n  }, [callState.remoteUserId])\n\n  // Start a call\n  const startCall = useCallback(async (\n    recipientId: string,\n    type: 'voice' | 'video'\n  ) => {\n    try {\n      // Get user media\n      const constraints = {\n        audio: true,\n        video: type === 'video',\n      }\n      const stream = await navigator.mediaDevices.getUserMedia(constraints)\n\n      // Initialize peer connection\n      initializePeerConnection()\n      const pc = peerConnection.current\n      if (!pc) return\n\n      // Add tracks to peer connection\n      stream.getTracks().forEach(track => {\n        pc.addTrack(track, stream)\n      })\n\n      // Create and send offer\n      const offer = await pc.createOffer()\n      await pc.setLocalDescription(offer)\n\n      chatSocket.socket?.emit('call', {\n        type: 'offer',\n        offer,\n        to: recipientId,\n      })\n\n      setCallState({\n        isInCall: true,\n        isCaller: true,\n        callType: type,\n        remoteUserId: recipientId,\n        localStream: stream,\n        remoteStream: null,\n      })\n    } catch (error) {\n      console.error('Failed to start call:', error)\n      endCall()\n    }\n  }, [initializePeerConnection])\n\n  // Answer a call\n  const answerCall = useCallback(async (\n    callerId: string,\n    type: 'voice' | 'video',\n    offer: RTCSessionDescriptionInit\n  ) => {\n    try {\n      // Get user media\n      const constraints = {\n        audio: true,\n        video: type === 'video',\n      }\n      const stream = await navigator.mediaDevices.getUserMedia(constraints)\n\n      // Initialize peer connection\n      initializePeerConnection()\n      const pc = peerConnection.current\n      if (!pc) return\n\n      // Add tracks to peer connection\n      stream.getTracks().forEach(track => {\n        pc.addTrack(track, stream)\n      })\n\n      // Set remote description (offer)\n      await pc.setRemoteDescription(new RTCSessionDescription(offer))\n\n      // Create and send answer\n      const answer = await pc.createAnswer()\n      await pc.setLocalDescription(answer)\n\n      chatSocket.socket?.emit('call', {\n        type: 'answer',\n        answer,\n        to: callerId,\n      })\n\n      setCallState({\n        isInCall: true,\n        isCaller: false,\n        callType: type,\n        remoteUserId: callerId,\n        localStream: stream,\n        remoteStream: null,\n      })\n    } catch (error) {\n      console.error('Failed to answer call:', error)\n      endCall()\n    }\n  }, [initializePeerConnection])\n\n  // End the call\n  const endCall = useCallback(() => {\n    // Stop all tracks\n    callState.localStream?.getTracks().forEach(track => track.stop())\n    callState.remoteStream?.getTracks().forEach(track => track.stop())\n\n    // Close peer connection\n    if (peerConnection.current) {\n      peerConnection.current.close()\n      peerConnection.current = null\n    }\n\n    // Notify the other user\n    if (callState.remoteUserId) {\n      chatSocket.socket?.emit('call', {\n        type: 'end',\n        to: callState.remoteUserId,\n      })\n    }\n\n    // Reset call state\n    setCallState(initialCallState)\n  }, [callState.localStream, callState.remoteStream, callState.remoteUserId])\n\n  // Handle incoming call signals\n  useEffect(() => {\n    const handleCallSignal = async (signal: any) => {\n      if (!signal.type) return\n\n      switch (signal.type) {\n        case 'offer':\n          // Handle incoming call\n          await answerCall(signal.from, signal.callType, signal.offer)\n          break\n\n        case 'answer':\n          // Handle call answer\n          if (peerConnection.current) {\n            await peerConnection.current.setRemoteDescription(\n              new RTCSessionDescription(signal.answer)\n            )\n          }\n          break\n\n        case 'ice-candidate':\n          // Handle ICE candidate\n          if (peerConnection.current) {\n            await peerConnection.current.addIceCandidate(\n              new RTCIceCandidate(signal.candidate)\n            )\n          }\n          break\n\n        case 'end':\n          // Handle call end\n          endCall()\n          break\n      }\n    }\n\n    // Subscribe to call signals\n    const unsubscribe = chatSocket.onCall(handleCallSignal)\n\n    return () => {\n      unsubscribe()\n      endCall()\n    }\n  }, [answerCall, endCall])\n\n  return {\n    callState,\n    startCall,\n    answerCall,\n    endCall,\n  }\n}\n\n// Example usage:\n/*\nconst {\n  callState,\n  startCall,\n  answerCall,\n  endCall\n} = useCall('currentUserId')\n\n// Start a video call\nawait startCall('recipientId', 'video')\n\n// End the call\nendCall()\n\n// Access call state\nconsole.log(callState.isInCall, callState.callType)\n*/\n"],"names":[],"mappings":";;;AAAA;AACA;;;;AAWA,MAAM,mBAA8B;IAClC,UAAU;IACV,UAAU;IACV,UAAU;IACV,cAAc;IACd,aAAa;IACb,cAAc;AAChB;AAEO,SAAS,QAAQ,MAAc;;IACpC,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAa;IACtD,MAAM,iBAAiB,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAA4B;IAExD,oCAAoC;IACpC,MAAM,2BAA2B,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;yDAAE;YAC3C,MAAM,KAAK,IAAI,kBAAkB;gBAC/B,YAAY;oBACV;wBAAE,MAAM;oBAA+B;iBAExC;YACH;YAEA,wBAAwB;YACxB,GAAG,cAAc;iEAAG,CAAC;oBACnB,IAAI,MAAM,SAAS,IAAI,UAAU,YAAY,EAAE;wBAC7C,uHAAA,CAAA,UAAU,CAAC,MAAM,EAAE,KAAK,QAAQ;4BAC9B,MAAM;4BACN,WAAW,MAAM,SAAS;4BAC1B,IAAI,UAAU,YAAY;wBAC5B;oBACF;gBACF;;YAEA,yBAAyB;YACzB,GAAG,OAAO;iEAAG,CAAC;oBACZ;yEAAa,CAAA,OAAQ,CAAC;gCACpB,GAAG,IAAI;gCACP,cAAc,MAAM,OAAO,CAAC,EAAE;4BAChC,CAAC;;gBACH;;YAEA,eAAe,OAAO,GAAG;QAC3B;wDAAG;QAAC,UAAU,YAAY;KAAC;IAE3B,eAAe;IACf,MAAM,YAAY,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;0CAAE,OAC5B,aACA;YAEA,IAAI;gBACF,iBAAiB;gBACjB,MAAM,cAAc;oBAClB,OAAO;oBACP,OAAO,SAAS;gBAClB;gBACA,MAAM,SAAS,MAAM,UAAU,YAAY,CAAC,YAAY,CAAC;gBAEzD,6BAA6B;gBAC7B;gBACA,MAAM,KAAK,eAAe,OAAO;gBACjC,IAAI,CAAC,IAAI;gBAET,gCAAgC;gBAChC,OAAO,SAAS,GAAG,OAAO;sDAAC,CAAA;wBACzB,GAAG,QAAQ,CAAC,OAAO;oBACrB;;gBAEA,wBAAwB;gBACxB,MAAM,QAAQ,MAAM,GAAG,WAAW;gBAClC,MAAM,GAAG,mBAAmB,CAAC;gBAE7B,uHAAA,CAAA,UAAU,CAAC,MAAM,EAAE,KAAK,QAAQ;oBAC9B,MAAM;oBACN;oBACA,IAAI;gBACN;gBAEA,aAAa;oBACX,UAAU;oBACV,UAAU;oBACV,UAAU;oBACV,cAAc;oBACd,aAAa;oBACb,cAAc;gBAChB;YACF,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,yBAAyB;gBACvC;YACF;QACF;yCAAG;QAAC;KAAyB;IAE7B,gBAAgB;IAChB,MAAM,aAAa,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;2CAAE,OAC7B,UACA,MACA;YAEA,IAAI;gBACF,iBAAiB;gBACjB,MAAM,cAAc;oBAClB,OAAO;oBACP,OAAO,SAAS;gBAClB;gBACA,MAAM,SAAS,MAAM,UAAU,YAAY,CAAC,YAAY,CAAC;gBAEzD,6BAA6B;gBAC7B;gBACA,MAAM,KAAK,eAAe,OAAO;gBACjC,IAAI,CAAC,IAAI;gBAET,gCAAgC;gBAChC,OAAO,SAAS,GAAG,OAAO;uDAAC,CAAA;wBACzB,GAAG,QAAQ,CAAC,OAAO;oBACrB;;gBAEA,iCAAiC;gBACjC,MAAM,GAAG,oBAAoB,CAAC,IAAI,sBAAsB;gBAExD,yBAAyB;gBACzB,MAAM,SAAS,MAAM,GAAG,YAAY;gBACpC,MAAM,GAAG,mBAAmB,CAAC;gBAE7B,uHAAA,CAAA,UAAU,CAAC,MAAM,EAAE,KAAK,QAAQ;oBAC9B,MAAM;oBACN;oBACA,IAAI;gBACN;gBAEA,aAAa;oBACX,UAAU;oBACV,UAAU;oBACV,UAAU;oBACV,cAAc;oBACd,aAAa;oBACb,cAAc;gBAChB;YACF,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,0BAA0B;gBACxC;YACF;QACF;0CAAG;QAAC;KAAyB;IAE7B,eAAe;IACf,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;wCAAE;YAC1B,kBAAkB;YAClB,UAAU,WAAW,EAAE,YAAY;gDAAQ,CAAA,QAAS,MAAM,IAAI;;YAC9D,UAAU,YAAY,EAAE,YAAY;gDAAQ,CAAA,QAAS,MAAM,IAAI;;YAE/D,wBAAwB;YACxB,IAAI,eAAe,OAAO,EAAE;gBAC1B,eAAe,OAAO,CAAC,KAAK;gBAC5B,eAAe,OAAO,GAAG;YAC3B;YAEA,wBAAwB;YACxB,IAAI,UAAU,YAAY,EAAE;gBAC1B,uHAAA,CAAA,UAAU,CAAC,MAAM,EAAE,KAAK,QAAQ;oBAC9B,MAAM;oBACN,IAAI,UAAU,YAAY;gBAC5B;YACF;YAEA,mBAAmB;YACnB,aAAa;QACf;uCAAG;QAAC,UAAU,WAAW;QAAE,UAAU,YAAY;QAAE,UAAU,YAAY;KAAC;IAE1E,+BAA+B;IAC/B,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;6BAAE;YACR,MAAM;sDAAmB,OAAO;oBAC9B,IAAI,CAAC,OAAO,IAAI,EAAE;oBAElB,OAAQ,OAAO,IAAI;wBACjB,KAAK;4BACH,uBAAuB;4BACvB,MAAM,WAAW,OAAO,IAAI,EAAE,OAAO,QAAQ,EAAE,OAAO,KAAK;4BAC3D;wBAEF,KAAK;4BACH,qBAAqB;4BACrB,IAAI,eAAe,OAAO,EAAE;gCAC1B,MAAM,eAAe,OAAO,CAAC,oBAAoB,CAC/C,IAAI,sBAAsB,OAAO,MAAM;4BAE3C;4BACA;wBAEF,KAAK;4BACH,uBAAuB;4BACvB,IAAI,eAAe,OAAO,EAAE;gCAC1B,MAAM,eAAe,OAAO,CAAC,eAAe,CAC1C,IAAI,gBAAgB,OAAO,SAAS;4BAExC;4BACA;wBAEF,KAAK;4BACH,kBAAkB;4BAClB;4BACA;oBACJ;gBACF;;YAEA,4BAA4B;YAC5B,MAAM,cAAc,uHAAA,CAAA,UAAU,CAAC,MAAM,CAAC;YAEtC;qCAAO;oBACL;oBACA;gBACF;;QACF;4BAAG;QAAC;QAAY;KAAQ;IAExB,OAAO;QACL;QACA;QACA;QACA;IACF;AACF,EAEA,iBAAiB;CACjB;;;;;;;;;;;;;;;;AAgBA;GAnOgB","debugId":null}},
    {"offset": {"line": 663, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/app/test/page.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect, useRef } from 'react'\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport chatSocket from '@/lib/socket'\nimport { useCall } from '@/hooks/use-call'\n\ninterface Message {\n  id: string\n  text: string\n  sender: string\n  receiver: string\n  timestamp: string\n  type: 'text' | 'audio' | 'file'\n  status: 'sending' | 'sent' | 'delivered' | 'error'\n  originalLanguage: string\n  translatedText?: string\n}\n\nexport default function TestPage() {\n  const [messages, setMessages] = useState<Message[]>([])\n  const [newMessage, setNewMessage] = useState('')\n  const [isSending, setIsSending] = useState(false)\n  const [userId, setUserId] = useState('')\n  const messagesEndRef = useRef<HTMLDivElement>(null)\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" })\n  }\n\n  useEffect(() => {\n    scrollToBottom()\n  }, [messages])\n\n  useEffect(() => {\n    setUserId(`user-${Math.random().toString(36).substr(2, 9)}`)\n  }, [])\n  const [recipientId, setRecipientId] = useState('')\n  const localVideoRef = useRef<HTMLVideoElement>(null)\n  const remoteVideoRef = useRef<HTMLVideoElement>(null)\n\n  const { callState, startCall, endCall } = useCall(userId)\n\n  useEffect(() => {\n    if (userId) {  // Only connect when we have a userId\n      // Connect to socket\n      chatSocket.connect(userId, 'en')\n\n      // Listen for messages\n      const unsubscribe = chatSocket.onMessage((message) => {\n        const newMessage: Message = {\n          ...message,\n          status: 'delivered',\n          originalLanguage: message.originalLanguage || 'en'\n        }\n        setMessages(prev => [...prev, newMessage])\n      })\n\n      return () => {\n        unsubscribe()\n        chatSocket.disconnect()\n      }\n    }\n  }, [userId])\n\n  // Handle video streams\n  useEffect(() => {\n    if (callState.localStream && localVideoRef.current) {\n      localVideoRef.current.srcObject = callState.localStream\n    }\n    if (callState.remoteStream && remoteVideoRef.current) {\n      remoteVideoRef.current.srcObject = callState.remoteStream\n    }\n  }, [callState.localStream, callState.remoteStream])\n\n  const handleSendMessage = async (e: React.FormEvent) => {\n    e.preventDefault()\n    if (!newMessage.trim() || !recipientId || isSending) return\n\n    try {\n      setIsSending(true)\n      const newMsg: Message = {\n        id: Date.now().toString(),\n        text: newMessage,\n        sender: userId,\n        receiver: recipientId,\n        timestamp: new Date().toISOString(),\n        type: 'text',\n        status: 'sending',\n        originalLanguage: 'en'\n      }\n      \n      setMessages(prev => [...prev, newMsg])\n\n      chatSocket.sendMessage({\n        text: newMessage,\n        sender: userId,\n        receiver: recipientId,\n        originalLanguage: 'en',\n        type: 'text'\n      })\n\n      // Update message status to sent\n      setMessages(prev => \n        prev.map(msg => \n          msg.id === newMsg.id \n            ? { ...msg, status: 'sent' as const } \n            : msg\n        )\n      )\n\n      setNewMessage('')\n    } catch (error) {\n      console.error('Failed to send message:', error)\n      // Update message status to error\n      setMessages(prev => \n        prev.map(msg => \n          msg.id === Date.now().toString() \n            ? { ...msg, status: 'error' as const } \n            : msg\n        )\n      )\n    } finally {\n      setIsSending(false)\n    }\n  }\n\n  const handleStartCall = async () => {\n    if (!recipientId) return\n    await startCall(recipientId, 'video')\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-900 text-white p-4\">\n      <div className=\"max-w-4xl mx-auto space-y-4\">\n        {/* User Info */}\n        <Card className=\"bg-gray-800 border-gray-700\">\n          <CardHeader>\n            <CardTitle>Test Chat & Call</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-4\">\n              <div className=\"p-4 bg-blue-600 rounded-lg\">\n                <p className=\"text-lg font-bold\">Your ID: {userId}</p>\n                <p className=\"text-sm mt-2\">Share this ID with another user to chat with them</p>\n              </div>\n              <div className=\"flex space-x-2\">\n                <Input\n                  placeholder=\"Enter recipient ID\"\n                  value={recipientId}\n                  onChange={(e) => setRecipientId(e.target.value)}\n                  className=\"bg-gray-700 border-gray-600\"\n                />\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Video Call Area */}\n        {callState.isInCall && (\n          <Card className=\"bg-gray-800 border-gray-700\">\n            <CardHeader>\n              <CardTitle>Video Call</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <h3 className=\"mb-2\">Local Video</h3>\n                  <video\n                    ref={localVideoRef}\n                    autoPlay\n                    playsInline\n                    muted\n                    className=\"w-full bg-gray-700 rounded\"\n                  />\n                </div>\n                <div>\n                  <h3 className=\"mb-2\">Remote Video</h3>\n                  <video\n                    ref={remoteVideoRef}\n                    autoPlay\n                    playsInline\n                    className=\"w-full bg-gray-700 rounded\"\n                  />\n                </div>\n              </div>\n              <Button\n                onClick={endCall}\n                variant=\"destructive\"\n                className=\"mt-4\"\n              >\n                End Call\n              </Button>\n            </CardContent>\n          </Card>\n        )}\n\n        {/* Chat Area */}\n        <Card className=\"bg-gray-800 border-gray-700\">\n          <CardHeader>\n            <CardTitle>Chat</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-4\">\n              {/* Messages */}\n              <div className=\"h-[400px] overflow-y-auto space-y-2 p-4 bg-gray-700 rounded\">\n                {messages.length === 0 ? (\n                  <div className=\"text-center text-gray-400 mt-4\">\n                    No messages yet. Start a conversation!\n                  </div>\n                ) : (\n                  messages.map((message) => (\n                    <div\n                      key={message.id}\n                      className={`p-3 rounded-lg ${\n                        message.sender === userId\n                          ? 'bg-blue-600 ml-auto'\n                          : 'bg-gray-600'\n                      } max-w-[80%] shadow-md transition-all duration-200 hover:scale-[1.02]`}\n                    >\n                      <p className=\"text-sm font-medium mb-1\">{message.text}</p>\n                      <div className=\"flex items-center justify-between text-xs text-gray-300\">\n                        <span>{message.sender === userId ? 'You' : 'Them'}</span>\n                        <div className=\"flex items-center gap-2\">\n                          <span>{new Date(message.timestamp).toLocaleTimeString()}</span>\n                          {message.sender === userId && (\n                            <span className=\"text-xs\">\n                              {message.status === 'sending' && '⏳'}\n                              {message.status === 'sent' && '✓'}\n                              {message.status === 'delivered' && '✓✓'}\n                              {message.status === 'error' && '❌'}\n                            </span>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  ))\n                )}\n                <div ref={messagesEndRef} />\n              </div>\n\n              {/* Message Input */}\n              <form onSubmit={handleSendMessage} className=\"flex space-x-2\">\n                <Input\n                  value={newMessage}\n                  onChange={(e) => setNewMessage(e.target.value)}\n                  placeholder=\"Type a message...\"\n                  className=\"bg-gray-700 border-gray-600\"\n                  disabled={isSending}\n                />\n                <Button \n                  type=\"submit\" \n                  disabled={isSending || !newMessage.trim() || !recipientId}\n                  className=\"min-w-[80px] transition-all duration-200\"\n                >\n                  {isSending ? (\n                    <div className=\"h-5 w-5 animate-spin rounded-full border-b-2 border-white\" />\n                  ) : (\n                    'Send'\n                  )}\n                </Button>\n              </form>\n\n              {/* Call Controls */}\n              <div className=\"flex justify-center\">\n                <Button\n                  onClick={handleStartCall}\n                  disabled={!recipientId || callState.isInCall}\n                  className=\"bg-green-600 hover:bg-green-700\"\n                >\n                  Start Video Call\n                </Button>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}